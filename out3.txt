C:\Users\Administrator\Desktop\학교 자료들\3학년1학기\컴파일러\Syntax-Analyzer\2024_compiler_proj>python main.py test3.txt
['vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace']
--------------------
STATE_STACK: [0]
LHS_list: []
RHS_list: ['vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s4
--------------------
STATE_STACK: [0, 4]
LHS_list: ['vtype']
RHS_list: ['id', 'assign', 'num', 'semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s7
--------------------
STATE_STACK: [0, 4, 7]
LHS_list: ['vtype', 'id']
RHS_list: ['assign', 'num', 'semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s11
--------------------
STATE_STACK: [0, 4, 7, 11]
LHS_list: ['vtype', 'id', 'assign']
RHS_list: ['num', 'semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 4, 7, 11, 24]
LHS_list: ['vtype', 'id', 'assign', 'num']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 4, 7, 11, 21]
LHS_list: ['vtype', 'id', 'assign', 'F_EXPR']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 4, 7, 11, 20]
LHS_list: ['vtype', 'id', 'assign', 'T_EXPR']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 4, 7, 11, 16]
LHS_list: ['vtype', 'id', 'assign', 'EXPR']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r7
--------------------
STATE_STACK: [0, 4, 7, 11, 15]
LHS_list: ['vtype', 'id', 'assign', 'RHS']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r6
--------------------
STATE_STACK: [0, 4, 8]
LHS_list: ['vtype', 'ASSIGN']
RHS_list: ['semi', 'vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s12
--------------------
STATE_STACK: [0, 4, 8, 12]
LHS_list: ['vtype', 'ASSIGN', 'semi']
RHS_list: ['vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r5
--------------------
STATE_STACK: [0, 2]
LHS_list: ['VDECL']
RHS_list: ['vtype', 'id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s4
--------------------
STATE_STACK: [0, 2, 4]
LHS_list: ['VDECL', 'vtype']
RHS_list: ['id', 'semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s7
--------------------
STATE_STACK: [0, 2, 4, 7]
LHS_list: ['VDECL', 'vtype', 'id']
RHS_list: ['semi', 'vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s9
--------------------
STATE_STACK: [0, 2, 4, 7, 9]
LHS_list: ['VDECL', 'vtype', 'id', 'semi']
RHS_list: ['vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r4
--------------------
STATE_STACK: [0, 2, 2]
LHS_list: ['VDECL', 'VDECL']
RHS_list: ['vtype', 'id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s4
--------------------
STATE_STACK: [0, 2, 2, 4]
LHS_list: ['VDECL', 'VDECL', 'vtype']
RHS_list: ['id', 'assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s7
--------------------
STATE_STACK: [0, 2, 2, 4, 7]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id']
RHS_list: ['assign', 'num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s11
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign']
RHS_list: ['num', 'semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11, 24]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign', 'num']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11, 21]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign', 'F_EXPR']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11, 20]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign', 'T_EXPR']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11, 16]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign', 'EXPR']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r7
--------------------
STATE_STACK: [0, 2, 2, 4, 7, 11, 15]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'id', 'assign', 'RHS']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r6
--------------------
STATE_STACK: [0, 2, 2, 4, 8]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'ASSIGN']
RHS_list: ['semi', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s12
--------------------
STATE_STACK: [0, 2, 2, 4, 8, 12]
LHS_list: ['VDECL', 'VDECL', 'vtype', 'ASSIGN', 'semi']
RHS_list: ['vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r5
--------------------
STATE_STACK: [0, 2, 2, 2]
LHS_list: ['VDECL', 'VDECL', 'VDECL']
RHS_list: ['vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s4
--------------------
STATE_STACK: [0, 2, 2, 2, 4]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype']
RHS_list: ['id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s7
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id']
RHS_list: ['lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s10
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen']
RHS_list: ['vtype', 'id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype']
RHS_list: ['id', 'comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s26
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id']
RHS_list: ['comma', 'vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s32
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26, 32]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma']
RHS_list: ['vtype', 'id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s44
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26, 32, 44]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype']
RHS_list: ['id', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s52
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26, 32, 44, 52]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r22
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26, 32, 44, 52, 58]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id', 'comma', 'vtype', 'id', 'MOREARGS']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r21
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 14, 26, 31]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'vtype', 'id', 'MOREARGS']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r19
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s25
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen']
RHS_list: ['lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s40
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s49
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s60
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s64
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['id', 'assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s43
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id']
RHS_list: ['assign', 'num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s11
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign']
RHS_list: ['num', 'multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'num']
RHS_list: ['multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR']
RHS_list: ['multdiv', 'lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s28
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv']
RHS_list: ['lparen', 'num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s22
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen']
RHS_list: ['num', 'addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'num']
RHS_list: ['addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'F_EXPR']
RHS_list: ['addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR']
RHS_list: ['addsub', 'num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20, 27]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR', 'addsub']
RHS_list: ['num', 'rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20, 27, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR', 'addsub', 'num']
RHS_list: ['rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20, 27, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR', 'addsub', 'F_EXPR']
RHS_list: ['rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20, 27, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR', 'addsub', 'T_EXPR']
RHS_list: ['rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 20, 27, 33]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'T_EXPR', 'addsub', 'EXPR']
RHS_list: ['rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r11
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 29]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'EXPR']
RHS_list: ['rparen', 'multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s35
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 22, 29, 35]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'lparen', 'EXPR', 'rparen']
RHS_list: ['multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r15
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'F_EXPR']
RHS_list: ['multdiv', 'num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s28
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 21, 28]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'F_EXPR', 'multdiv']
RHS_list: ['num', 'addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 21, 28, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'F_EXPR', 'multdiv', 'num']
RHS_list: ['addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 21, 28, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'F_EXPR', 'multdiv', 'F_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 21, 28, 34]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'F_EXPR', 'multdiv', 'T_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r13
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 21, 28, 34]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR', 'multdiv', 'T_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r13
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20, 27]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub']
RHS_list: ['num', 'semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20, 27, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'num']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20, 27, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'F_EXPR']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20, 27, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'T_EXPR']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 20, 27, 33]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'EXPR']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r11
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 16]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'EXPR']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r7
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 43, 11, 15]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'RHS']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r6
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 39]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'ASSIGN']
RHS_list: ['semi', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s48
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 39, 48]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'ASSIGN', 'semi']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r26
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s40
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s49
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62, 65, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62, 65, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62, 65, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s60
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s64
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s70
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s73
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else']
RHS_list: ['lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s74
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s40
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s49
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s60
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s64
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['while', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s41
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s50
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s63
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s66
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['id', 'assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s43
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id']
RHS_list: ['assign', 'id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s11
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign']
RHS_list: ['id', 'addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 23]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'id']
RHS_list: ['addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r16
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'F_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR']
RHS_list: ['addsub', 'num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20, 27]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub']
RHS_list: ['num', 'semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20, 27, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'num']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20, 27, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'F_EXPR']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20, 27, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'T_EXPR']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 20, 27, 33]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'T_EXPR', 'addsub', 'EXPR']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r11
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 16]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'EXPR']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r7
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 43, 11, 15]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'id', 'assign', 'RHS']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r6
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 39]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'ASSIGN']
RHS_list: ['semi', 'rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s48
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 39, 48]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'ASSIGN', 'semi']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r26
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 69]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s71
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 41, 50, 57, 63, 66, 69, 71]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'while', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r28
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s70
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67, 70]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r33
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67, 70, 72]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']
RHS_list: ['rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'STMT']
RHS_list: ['rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s76
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75, 76]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r32
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 40, 49, 55, 60, 64, 67, 70, 72]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'STMT']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s70
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s73
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else']
RHS_list: ['lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s74
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s40
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s49
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s60
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s64
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['if', 'lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s40
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if']
RHS_list: ['lparen', 'boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s49
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen']
RHS_list: ['boolstr', 'comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s56
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 56]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr']
RHS_list: ['comp', 'boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s62
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 56, 62]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp']
RHS_list: ['boolstr', 'rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s65
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 56, 62, 65]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r31
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 56, 62, 65, 68]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'comp', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r30
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 56, 61]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'boolstr', 'COND_T']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r29
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND']
RHS_list: ['rparen', 'lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s60
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen']
RHS_list: ['lbrace', 'rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s64
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace']
RHS_list: ['rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s70
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['else', 'lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s73
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70, 73]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else']
RHS_list: ['lbrace', 'rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s74
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70, 73, 74]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s76
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75, 76]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r32
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 40, 49, 55, 60, 64, 67, 70, 72]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']
RHS_list: ['rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT']
RHS_list: ['rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s70
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67, 70]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r33
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 40, 49, 55, 60, 64, 67, 70, 72]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']
RHS_list: ['rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'STMT']
RHS_list: ['rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK']
RHS_list: ['rbrace', 'return', 'num', 'semi', 'rbrace', '$']
DECISION: s76
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 73, 74, 75, 76]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'else', 'lbrace', 'BLOCK', 'rbrace']
RHS_list: ['return', 'num', 'semi', 'rbrace', '$']
DECISION: r32
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 40, 49, 55, 60, 64, 67, 70, 72]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']
RHS_list: ['return', 'num', 'semi', 'rbrace', '$']
DECISION: r27
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 37]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'STMT']
RHS_list: ['return', 'num', 'semi', 'rbrace', '$']
DECISION: r24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 37, 47]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'STMT', 'BLOCK']
RHS_list: ['return', 'num', 'semi', 'rbrace', '$']
DECISION: r23
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK']
RHS_list: ['return', 'num', 'semi', 'rbrace', '$']
DECISION: s46
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return']
RHS_list: ['num', 'semi', 'rbrace', '$']
DECISION: s24
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 24]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'num']
RHS_list: ['semi', 'rbrace', '$']
DECISION: r17
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 21]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'F_EXPR']
RHS_list: ['semi', 'rbrace', '$']
DECISION: r14
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 20]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'T_EXPR']
RHS_list: ['semi', 'rbrace', '$']
DECISION: r12
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 16]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'EXPR']
RHS_list: ['semi', 'rbrace', '$']
DECISION: r7
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 54]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'RHS']
RHS_list: ['semi', 'rbrace', '$']
DECISION: s59
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 46, 54, 59]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'return', 'RHS', 'semi']
RHS_list: ['rbrace', '$']
DECISION: r34
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 45]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'RETURN']
RHS_list: ['rbrace', '$']
DECISION: s53
--------------------
STATE_STACK: [0, 2, 2, 2, 4, 7, 10, 13, 25, 30, 36, 45, 53]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'RETURN', 'rbrace']
RHS_list: ['$']
DECISION: r18
--------------------
STATE_STACK: [0, 2, 2, 2, 3]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'FDECL']
RHS_list: ['$']
DECISION: r3
--------------------
STATE_STACK: [0, 2, 2, 2, 3, 6]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'FDECL', 'CODE']
RHS_list: ['$']
DECISION: r2
--------------------
STATE_STACK: [0, 2, 2, 2, 5]
LHS_list: ['VDECL', 'VDECL', 'VDECL', 'CODE']
RHS_list: ['$']
DECISION: r1
--------------------
STATE_STACK: [0, 2, 2, 5]
LHS_list: ['VDECL', 'VDECL', 'CODE']
RHS_list: ['$']
DECISION: r1
--------------------
STATE_STACK: [0, 2, 5]
LHS_list: ['VDECL', 'CODE']
RHS_list: ['$']
DECISION: r1
--------------------
STATE_STACK: [0, 1]
LHS_list: ['CODE']
RHS_list: ['$']
DECISION: acc
=======================
<ACCEPTED!!!!.>
Print Prase tree? say 'Yes'
a
[17, 14, 12, 7, 6, 5, 4, 17, 14, 12, 7, 6, 5, 22, 21, 19, 31, 30, 29, 17, 17, 14, 17, 14, 12, 11, 15, 17, 14, 13, 13, 17, 14, 12, 11, 7, 6, 26, 31, 30, 30, 29, 24, 31, 30, 29, 31, 30, 29, 16, 14, 17, 14, 12, 11, 7, 6, 26, 24, 23, 28, 24, 23, 33, 27, 24, 23, 32, 27, 24, 23, 23, 31, 30, 29, 31, 30, 29, 24, 24, 32, 27, 24, 23, 33, 27, 24, 23, 32, 27, 24, 23, 17, 14, 12, 7, 34, 18, 3, 2, 1, 1, 1]
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
EXPR
=================
<CFG NUMBER>  7
<CFG GRAMMER>  {'RHS': ['EXPR']}
<Parent NODE>  RHS
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as RHS
<stack>
RHS
=================
<CFG NUMBER>  6
<CFG GRAMMER>  {'ASSIGN': ['id', 'assign', 'RHS']}
<Parent NODE>  ASSIGN
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  assign
Child node assign not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  RHS
Child node RHS found in stack. Popping from stack and setting parent as ASSIGN
<stack>
ASSIGN
=================
<CFG NUMBER>  5
<CFG GRAMMER>  {'VDECL': ['vtype', 'ASSIGN', 'semi']}
<Parent NODE>  VDECL
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as VDECL
<CHILD NODE>  ASSIGN
Child node ASSIGN found in stack. Popping from stack and setting parent as VDECL
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as VDECL
<stack>
VDECL
=================
<CFG NUMBER>  4
<CFG GRAMMER>  {'VDECL': ['vtype', 'id', 'semi']}
<Parent NODE>  VDECL
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as VDECL
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as VDECL
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as VDECL
<stack>
VDECL
VDECL
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
EXPR
=================
<CFG NUMBER>  7
<CFG GRAMMER>  {'RHS': ['EXPR']}
<Parent NODE>  RHS
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as RHS
<stack>
VDECL
VDECL
RHS
=================
<CFG NUMBER>  6
<CFG GRAMMER>  {'ASSIGN': ['id', 'assign', 'RHS']}
<Parent NODE>  ASSIGN
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  assign
Child node assign not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  RHS
Child node RHS found in stack. Popping from stack and setting parent as ASSIGN
<stack>
VDECL
VDECL
ASSIGN
=================
<CFG NUMBER>  5
<CFG GRAMMER>  {'VDECL': ['vtype', 'ASSIGN', 'semi']}
<Parent NODE>  VDECL
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as VDECL
<CHILD NODE>  ASSIGN
Child node ASSIGN found in stack. Popping from stack and setting parent as VDECL
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as VDECL
<stack>
VDECL
VDECL
VDECL
=================
<CFG NUMBER>  22
<CFG GRAMMER>  {'MOREARGS': []}
<Parent NODE>  MOREARGS
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as MOREARGS
<stack>
VDECL
VDECL
VDECL
MOREARGS
=================
<CFG NUMBER>  21
<CFG GRAMMER>  {'MOREARGS': ['comma', 'vtype', 'id', 'MOREARGS']}
<Parent NODE>  MOREARGS
<CHILD NODE>  comma
Child node comma not found in stack. Creating new node and setting parent as MOREARGS
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as MOREARGS
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as MOREARGS
<CHILD NODE>  MOREARGS
Child node MOREARGS found in stack. Popping from stack and setting parent as MOREARGS
<stack>
VDECL
VDECL
VDECL
MOREARGS
=================
<CFG NUMBER>  19
<CFG GRAMMER>  {'ARG': ['vtype', 'id', 'MOREARGS']}
<Parent NODE>  ARG
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as ARG
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as ARG
<CHILD NODE>  MOREARGS
Child node MOREARGS found in stack. Popping from stack and setting parent as ARG
<stack>
VDECL
VDECL
VDECL
ARG
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': []}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
T_EXPR
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
T_EXPR
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
T_EXPR
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
T_EXPR
EXPR
=================
<CFG NUMBER>  11
<CFG GRAMMER>  {'EXPR': ['T_EXPR', 'addsub', 'EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<CHILD NODE>  addsub
Child node addsub not found in stack. Creating new node and setting parent as EXPR
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
EXPR
=================
<CFG NUMBER>  15
<CFG GRAMMER>  {'F_EXPR': ['lparen', 'EXPR', 'rparen']}
<Parent NODE>  F_EXPR
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as F_EXPR
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as F_EXPR
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
F_EXPR
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
F_EXPR
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
F_EXPR
T_EXPR
=================
<CFG NUMBER>  13
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR', 'multdiv', 'T_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<CHILD NODE>  multdiv
Child node multdiv not found in stack. Creating new node and setting parent as T_EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
F_EXPR
T_EXPR
=================
<CFG NUMBER>  13
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR', 'multdiv', 'T_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<CHILD NODE>  multdiv
Child node multdiv not found in stack. Creating new node and setting parent as T_EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
T_EXPR
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
T_EXPR
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
T_EXPR
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
T_EXPR
EXPR
=================
<CFG NUMBER>  11
<CFG GRAMMER>  {'EXPR': ['T_EXPR', 'addsub', 'EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<CHILD NODE>  addsub
Child node addsub not found in stack. Creating new node and setting parent as EXPR
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
EXPR
=================
<CFG NUMBER>  7
<CFG GRAMMER>  {'RHS': ['EXPR']}
<Parent NODE>  RHS
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as RHS
<stack>
VDECL
VDECL
VDECL
ARG
COND
RHS
=================
<CFG NUMBER>  6
<CFG GRAMMER>  {'ASSIGN': ['id', 'assign', 'RHS']}
<Parent NODE>  ASSIGN
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  assign
Child node assign not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  RHS
Child node RHS found in stack. Popping from stack and setting parent as ASSIGN
<stack>
VDECL
VDECL
VDECL
ARG
COND
ASSIGN
=================
<CFG NUMBER>  26
<CFG GRAMMER>  {'STMT': ['ASSIGN', 'semi']}
<Parent NODE>  STMT
<CHILD NODE>  ASSIGN
Child node ASSIGN found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': ["''"]}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': []}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': ["''"]}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': ["''"]}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
=================
<CFG NUMBER>  16
<CFG GRAMMER>  {'F_EXPR': ['id']}
<Parent NODE>  F_EXPR
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
T_EXPR
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
T_EXPR
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
T_EXPR
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
T_EXPR
EXPR
=================
<CFG NUMBER>  11
<CFG GRAMMER>  {'EXPR': ['T_EXPR', 'addsub', 'EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<CHILD NODE>  addsub
Child node addsub not found in stack. Creating new node and setting parent as EXPR
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
EXPR
=================
<CFG NUMBER>  7
<CFG GRAMMER>  {'RHS': ['EXPR']}
<Parent NODE>  RHS
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as RHS
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
RHS
=================
<CFG NUMBER>  6
<CFG GRAMMER>  {'ASSIGN': ['id', 'assign', 'RHS']}
<Parent NODE>  ASSIGN
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  assign
Child node assign not found in stack. Creating new node and setting parent as ASSIGN
<CHILD NODE>  RHS
Child node RHS found in stack. Popping from stack and setting parent as ASSIGN
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
ASSIGN
=================
<CFG NUMBER>  26
<CFG GRAMMER>  {'STMT': ['ASSIGN', 'semi']}
<Parent NODE>  STMT
<CHILD NODE>  ASSIGN
Child node ASSIGN found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
COND
BLOCK
=================
<CFG NUMBER>  28
<CFG GRAMMER>  {'STMT': ['while', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace']}
<Parent NODE>  STMT
<CHILD NODE>  while
Child node while not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
BLOCK
=================
<CFG NUMBER>  33
<CFG GRAMMER>  {'ELSE': []}
<Parent NODE>  ELSE
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as ELSE
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
COND
BLOCK
ELSE
=================
<CFG NUMBER>  27
<CFG GRAMMER>  {'STMT': ['if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']}
<Parent NODE>  STMT
<CHILD NODE>  if
Child node if not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  ELSE
Child node ELSE found in stack. Popping from stack and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
BLOCK
=================
<CFG NUMBER>  32
<CFG GRAMMER>  {'ELSE': ['else', 'lbrace', 'BLOCK', 'rbrace']}
<Parent NODE>  ELSE
<CHILD NODE>  else
Child node else not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as ELSE
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as ELSE
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
COND
BLOCK
ELSE
=================
<CFG NUMBER>  27
<CFG GRAMMER>  {'STMT': ['if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']}
<Parent NODE>  STMT
<CHILD NODE>  if
Child node if not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  ELSE
Child node ELSE found in stack. Popping from stack and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': ["''"]}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
=================
<CFG NUMBER>  31
<CFG GRAMMER>  {'COND_T': ["''"]}
<Parent NODE>  COND_T
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND_T
=================
<CFG NUMBER>  30
<CFG GRAMMER>  {'COND_T': ['comp', 'boolstr', 'COND_T']}
<Parent NODE>  COND_T
<CHILD NODE>  comp
Child node comp not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND_T
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND_T
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND_T
=================
<CFG NUMBER>  29
<CFG GRAMMER>  {'COND': ['boolstr', 'COND_T']}
<Parent NODE>  COND
<CHILD NODE>  boolstr
Child node boolstr not found in stack. Creating new node and setting parent as COND
<CHILD NODE>  COND_T
Child node COND_T found in stack. Popping from stack and setting parent as COND
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND
BLOCK
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND
BLOCK
BLOCK
=================
<CFG NUMBER>  32
<CFG GRAMMER>  {'ELSE': ['else', 'lbrace', 'BLOCK', 'rbrace']}
<Parent NODE>  ELSE
<CHILD NODE>  else
Child node else not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as ELSE
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as ELSE
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
COND
BLOCK
ELSE
=================
<CFG NUMBER>  27
<CFG GRAMMER>  {'STMT': ['if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']}
<Parent NODE>  STMT
<CHILD NODE>  if
Child node if not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  ELSE
Child node ELSE found in stack. Popping from stack and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
BLOCK
=================
<CFG NUMBER>  33
<CFG GRAMMER>  {'ELSE': ["''"]}
<Parent NODE>  ELSE
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as ELSE
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
COND
BLOCK
ELSE
=================
<CFG NUMBER>  27
<CFG GRAMMER>  {'STMT': ['if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']}
<Parent NODE>  STMT
<CHILD NODE>  if
Child node if not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  ELSE
Child node ELSE found in stack. Popping from stack and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
BLOCK
=================
<CFG NUMBER>  32
<CFG GRAMMER>  {'ELSE': ['else', 'lbrace', 'BLOCK', 'rbrace']}
<Parent NODE>  ELSE
<CHILD NODE>  else
Child node else not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as ELSE
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as ELSE
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as ELSE
<stack>
VDECL
VDECL
VDECL
ARG
COND
BLOCK
ELSE
=================
<CFG NUMBER>  27
<CFG GRAMMER>  {'STMT': ['if', 'lparen', 'COND', 'rparen', 'lbrace', 'BLOCK', 'rbrace', 'ELSE']}
<Parent NODE>  STMT
<CHILD NODE>  if
Child node if not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  COND
Child node COND found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as STMT
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as STMT
<CHILD NODE>  ELSE
Child node ELSE found in stack. Popping from stack and setting parent as STMT
<stack>
VDECL
VDECL
VDECL
ARG
STMT
=================
<CFG NUMBER>  24
<CFG GRAMMER>  {'BLOCK': ["''"]}
<Parent NODE>  BLOCK
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
STMT
BLOCK
=================
<CFG NUMBER>  23
<CFG GRAMMER>  {'BLOCK': ['STMT', 'BLOCK']}
<Parent NODE>  BLOCK
<CHILD NODE>  STMT
Child node STMT found in stack. Popping from stack and setting parent as BLOCK
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as BLOCK
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
=================
<CFG NUMBER>  17
<CFG GRAMMER>  {'F_EXPR': ['num']}
<Parent NODE>  F_EXPR
<CHILD NODE>  num
Child node num not found in stack. Creating new node and setting parent as F_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
F_EXPR
=================
<CFG NUMBER>  14
<CFG GRAMMER>  {'T_EXPR': ['F_EXPR']}
<Parent NODE>  T_EXPR
<CHILD NODE>  F_EXPR
Child node F_EXPR found in stack. Popping from stack and setting parent as T_EXPR
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
T_EXPR
=================
<CFG NUMBER>  12
<CFG GRAMMER>  {'EXPR': ['T_EXPR']}
<Parent NODE>  EXPR
<CHILD NODE>  T_EXPR
Child node T_EXPR found in stack. Popping from stack and setting parent as EXPR
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
EXPR
=================
<CFG NUMBER>  7
<CFG GRAMMER>  {'RHS': ['EXPR']}
<Parent NODE>  RHS
<CHILD NODE>  EXPR
Child node EXPR found in stack. Popping from stack and setting parent as RHS
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
RHS
=================
<CFG NUMBER>  34
<CFG GRAMMER>  {'RETURN': ['return', 'RHS', 'semi']}
<Parent NODE>  RETURN
<CHILD NODE>  return
Child node return not found in stack. Creating new node and setting parent as RETURN
<CHILD NODE>  RHS
Child node RHS found in stack. Popping from stack and setting parent as RETURN
<CHILD NODE>  semi
Child node semi not found in stack. Creating new node and setting parent as RETURN
<stack>
VDECL
VDECL
VDECL
ARG
BLOCK
RETURN
=================
<CFG NUMBER>  18
<CFG GRAMMER>  {'FDECL': ['vtype', 'id', 'lparen', 'ARG', 'rparen', 'lbrace', 'BLOCK', 'RETURN', 'rbrace']}
<Parent NODE>  FDECL
<CHILD NODE>  vtype
Child node vtype not found in stack. Creating new node and setting parent as FDECL
<CHILD NODE>  id
Child node id not found in stack. Creating new node and setting parent as FDECL
<CHILD NODE>  lparen
Child node lparen not found in stack. Creating new node and setting parent as FDECL
<CHILD NODE>  ARG
Child node ARG found in stack. Popping from stack and setting parent as FDECL
<CHILD NODE>  rparen
Child node rparen not found in stack. Creating new node and setting parent as FDECL
<CHILD NODE>  lbrace
Child node lbrace not found in stack. Creating new node and setting parent as FDECL
<CHILD NODE>  BLOCK
Child node BLOCK found in stack. Popping from stack and setting parent as FDECL
<CHILD NODE>  RETURN
Child node RETURN found in stack. Popping from stack and setting parent as FDECL
<CHILD NODE>  rbrace
Child node rbrace not found in stack. Creating new node and setting parent as FDECL
<stack>
VDECL
VDECL
VDECL
FDECL
=================
<CFG NUMBER>  3
<CFG GRAMMER>  {'CODE': []}
<Parent NODE>  CODE
<CHILD NODE>  ''
Child node '' not found in stack. Creating new node and setting parent as CODE
<stack>
VDECL
VDECL
VDECL
FDECL
CODE
=================
<CFG NUMBER>  2
<CFG GRAMMER>  {'CODE': ['FDECL', 'CODE']}
<Parent NODE>  CODE
<CHILD NODE>  FDECL
Child node FDECL found in stack. Popping from stack and setting parent as CODE
<CHILD NODE>  CODE
Child node CODE found in stack. Popping from stack and setting parent as CODE
<stack>
VDECL
VDECL
VDECL
CODE
=================
<CFG NUMBER>  1
<CFG GRAMMER>  {'CODE': ['VDECL', 'CODE']}
<Parent NODE>  CODE
<CHILD NODE>  VDECL
Child node VDECL found in stack. Popping from stack and setting parent as CODE
<CHILD NODE>  CODE
Child node CODE found in stack. Popping from stack and setting parent as CODE
<stack>
VDECL
VDECL
CODE
=================
<CFG NUMBER>  1
<CFG GRAMMER>  {'CODE': ['VDECL', 'CODE']}
<Parent NODE>  CODE
<CHILD NODE>  VDECL
Child node VDECL found in stack. Popping from stack and setting parent as CODE
<CHILD NODE>  CODE
Child node CODE found in stack. Popping from stack and setting parent as CODE
<stack>
VDECL
CODE
=================
<CFG NUMBER>  1
<CFG GRAMMER>  {'CODE': ['VDECL', 'CODE']}
<Parent NODE>  CODE
<CHILD NODE>  VDECL
Child node VDECL found in stack. Popping from stack and setting parent as CODE
<CHILD NODE>  CODE
Child node CODE found in stack. Popping from stack and setting parent as CODE
<stack>
CODE
=================
CODE
├── VDECL
│   ├── vtype
│   ├── ASSIGN
│   │   ├── id
│   │   ├── assign
│   │   └── RHS
│   │       └── EXPR
│   │           └── T_EXPR
│   │               └── F_EXPR
│   │                   └── num
│   └── semi
└── CODE
    ├── VDECL
    │   ├── vtype
    │   ├── id
    │   └── semi
    └── CODE
        ├── VDECL
        │   ├── vtype
        │   ├── ASSIGN
        │   │   ├── id
        │   │   ├── assign
        │   │   └── RHS
        │   │       └── EXPR
        │   │           └── T_EXPR
        │   │               └── F_EXPR
        │   │                   └── num
        │   └── semi
        └── CODE
            ├── FDECL
            │   ├── vtype
            │   ├── id
            │   ├── lparen
            │   ├── ARG
            │   │   ├── vtype
            │   │   ├── id
            │   │   └── MOREARGS
            │   │       ├── comma
            │   │       ├── vtype
            │   │       ├── id
            │   │       └── MOREARGS
            │   │           └── ''
            │   ├── rparen
            │   ├── lbrace
            │   ├── BLOCK
            │   │   ├── STMT
            │   │   │   ├── if
            │   │   │   ├── lparen
            │   │   │   ├── COND
            │   │   │   │   ├── boolstr
            │   │   │   │   └── COND_T
            │   │   │   │       ├── comp
            │   │   │   │       ├── boolstr
            │   │   │   │       └── COND_T
            │   │   │   │           └── ''
            │   │   │   ├── rparen
            │   │   │   ├── lbrace
            │   │   │   ├── BLOCK
            │   │   │   │   ├── STMT
            │   │   │   │   │   ├── ASSIGN
            │   │   │   │   │   │   ├── id
            │   │   │   │   │   │   ├── assign
            │   │   │   │   │   │   └── RHS
            │   │   │   │   │   │       └── EXPR
            │   │   │   │   │   │           ├── T_EXPR
            │   │   │   │   │   │           │   ├── F_EXPR
            │   │   │   │   │   │           │   │   └── num
            │   │   │   │   │   │           │   ├── multdiv
            │   │   │   │   │   │           │   └── T_EXPR
            │   │   │   │   │   │           │       ├── F_EXPR
            │   │   │   │   │   │           │       │   ├── lparen
            │   │   │   │   │   │           │       │   ├── EXPR
            │   │   │   │   │   │           │       │   │   ├── T_EXPR
            │   │   │   │   │   │           │       │   │   │   └── F_EXPR
            │   │   │   │   │   │           │       │   │   │       └── num
            │   │   │   │   │   │           │       │   │   ├── addsub
            │   │   │   │   │   │           │       │   │   └── EXPR
            │   │   │   │   │   │           │       │   │       └── T_EXPR
            │   │   │   │   │   │           │       │   │           └── F_EXPR
            │   │   │   │   │   │           │       │   │               └── num
            │   │   │   │   │   │           │       │   └── rparen
            │   │   │   │   │   │           │       ├── multdiv
            │   │   │   │   │   │           │       └── T_EXPR
            │   │   │   │   │   │           │           └── F_EXPR
            │   │   │   │   │   │           │               └── num
            │   │   │   │   │   │           ├── addsub
            │   │   │   │   │   │           └── EXPR
            │   │   │   │   │   │               └── T_EXPR
            │   │   │   │   │   │                   └── F_EXPR
            │   │   │   │   │   │                       └── num
            │   │   │   │   │   └── semi
            │   │   │   │   └── BLOCK
            │   │   │   │       ├── STMT
            │   │   │   │       │   ├── if
            │   │   │   │       │   ├── lparen
            │   │   │   │       │   ├── COND
            │   │   │   │       │   │   ├── boolstr
            │   │   │   │       │   │   └── COND_T
            │   │   │   │       │   │       ├── comp
            │   │   │   │       │   │       ├── boolstr
            │   │   │   │       │   │       └── COND_T
            │   │   │   │       │   │           ├── comp
            │   │   │   │       │   │           ├── boolstr
            │   │   │   │       │   │           └── COND_T
            │   │   │   │       │   │               └── ''
            │   │   │   │       │   ├── rparen
            │   │   │   │       │   ├── lbrace
            │   │   │   │       │   ├── BLOCK
            │   │   │   │       │   │   └── ''
            │   │   │   │       │   ├── rbrace
            │   │   │   │       │   └── ELSE
            │   │   │   │       │       ├── else
            │   │   │   │       │       ├── lbrace
            │   │   │   │       │       ├── BLOCK
            │   │   │   │       │       │   ├── STMT
            │   │   │   │       │       │   │   ├── if
            │   │   │   │       │       │   │   ├── lparen
            │   │   │   │       │       │   │   ├── COND
            │   │   │   │       │       │   │   │   ├── boolstr
            │   │   │   │       │       │   │   │   └── COND_T
            │   │   │   │       │       │   │   │       ├── comp
            │   │   │   │       │       │   │   │       ├── boolstr
            │   │   │   │       │       │   │   │       └── COND_T
            │   │   │   │       │       │   │   │           └── ''
            │   │   │   │       │       │   │   ├── rparen
            │   │   │   │       │       │   │   ├── lbrace
            │   │   │   │       │       │   │   ├── BLOCK
            │   │   │   │       │       │   │   │   ├── STMT
            │   │   │   │       │       │   │   │   │   ├── while
            │   │   │   │       │       │   │   │   │   ├── lparen
            │   │   │   │       │       │   │   │   │   ├── COND
            │   │   │   │       │       │   │   │   │   │   ├── boolstr
            │   │   │   │       │       │   │   │   │   │   └── COND_T
            │   │   │   │       │       │   │   │   │   │       ├── comp
            │   │   │   │       │       │   │   │   │   │       ├── boolstr
            │   │   │   │       │       │   │   │   │   │       └── COND_T
            │   │   │   │       │       │   │   │   │   │           └── ''
            │   │   │   │       │       │   │   │   │   ├── rparen
            │   │   │   │       │       │   │   │   │   ├── lbrace
            │   │   │   │       │       │   │   │   │   ├── BLOCK
            │   │   │   │       │       │   │   │   │   │   ├── STMT
            │   │   │   │       │       │   │   │   │   │   │   ├── ASSIGN
            │   │   │   │       │       │   │   │   │   │   │   │   ├── id
            │   │   │   │       │       │   │   │   │   │   │   │   ├── assign
            │   │   │   │       │       │   │   │   │   │   │   │   └── RHS
            │   │   │   │       │       │   │   │   │   │   │   │       └── EXPR
            │   │   │   │       │       │   │   │   │   │   │   │           ├── T_EXPR
            │   │   │   │       │       │   │   │   │   │   │   │           │   └── F_EXPR
            │   │   │   │       │       │   │   │   │   │   │   │           │       └── id
            │   │   │   │       │       │   │   │   │   │   │   │           ├── addsub
            │   │   │   │       │       │   │   │   │   │   │   │           └── EXPR
            │   │   │   │       │       │   │   │   │   │   │   │               └── T_EXPR
            │   │   │   │       │       │   │   │   │   │   │   │                   └── F_EXPR
            │   │   │   │       │       │   │   │   │   │   │   │                       └── num
            │   │   │   │       │       │   │   │   │   │   │   └── semi
            │   │   │   │       │       │   │   │   │   │   └── BLOCK
            │   │   │   │       │       │   │   │   │   │       └── ''
            │   │   │   │       │       │   │   │   │   └── rbrace
            │   │   │   │       │       │   │   │   └── BLOCK
            │   │   │   │       │       │   │   │       └── ''
            │   │   │   │       │       │   │   ├── rbrace
            │   │   │   │       │       │   │   └── ELSE
            │   │   │   │       │       │   │       └── ''
            │   │   │   │       │       │   └── BLOCK
            │   │   │   │       │       │       └── ''
            │   │   │   │       │       └── rbrace
            │   │   │   │       └── BLOCK
            │   │   │   │           └── ''
            │   │   │   ├── rbrace
            │   │   │   └── ELSE
            │   │   │       ├── else
            │   │   │       ├── lbrace
            │   │   │       ├── BLOCK
            │   │   │       │   ├── STMT
            │   │   │       │   │   ├── if
            │   │   │       │   │   ├── lparen
            │   │   │       │   │   ├── COND
            │   │   │       │   │   │   ├── boolstr
            │   │   │       │   │   │   └── COND_T
            │   │   │       │   │   │       ├── comp
            │   │   │       │   │   │       ├── boolstr
            │   │   │       │   │   │       └── COND_T
            │   │   │       │   │   │           └── ''
            │   │   │       │   │   ├── rparen
            │   │   │       │   │   ├── lbrace
            │   │   │       │   │   ├── BLOCK
            │   │   │       │   │   │   ├── STMT
            │   │   │       │   │   │   │   ├── if
            │   │   │       │   │   │   │   ├── lparen
            │   │   │       │   │   │   │   ├── COND
            │   │   │       │   │   │   │   │   ├── boolstr
            │   │   │       │   │   │   │   │   └── COND_T
            │   │   │       │   │   │   │   │       ├── comp
            │   │   │       │   │   │   │   │       ├── boolstr
            │   │   │       │   │   │   │   │       └── COND_T
            │   │   │       │   │   │   │   │           └── ''
            │   │   │       │   │   │   │   ├── rparen
            │   │   │       │   │   │   │   ├── lbrace
            │   │   │       │   │   │   │   ├── BLOCK
            │   │   │       │   │   │   │   │   └── ''
            │   │   │       │   │   │   │   ├── rbrace
            │   │   │       │   │   │   │   └── ELSE
            │   │   │       │   │   │   │       ├── else
            │   │   │       │   │   │   │       ├── lbrace
            │   │   │       │   │   │   │       ├── BLOCK
            │   │   │       │   │   │   │       │   └── ''
            │   │   │       │   │   │   │       └── rbrace
            │   │   │       │   │   │   └── BLOCK
            │   │   │       │   │   │       └── ''
            │   │   │       │   │   ├── rbrace
            │   │   │       │   │   └── ELSE
            │   │   │       │   │       └── ''
            │   │   │       │   └── BLOCK
            │   │   │       │       └── ''
            │   │   │       └── rbrace
            │   │   └── BLOCK
            │   │       └── ''
            │   ├── RETURN
            │   │   ├── return
            │   │   ├── RHS
            │   │   │   └── EXPR
            │   │   │       └── T_EXPR
            │   │   │           └── F_EXPR
            │   │   │               └── num
            │   │   └── semi
            │   └── rbrace
            └── CODE
                └── ''
==================
Analysis complete.